data:
    class_path: datasets.MMDetDataSetAdapter
    init_args:
        visualizer_cfg:
            class_path: mmdet.visualization.DetLocalVisualizer
            init_args:
                text_color: white
        evaluator_cfg:
            split_info:
                split_format_to: [metrics.ann_file]
                split_name_map:
                    val: test
                    test: test
                    predict: test
            train:
                class_path: mmengine.evaluator.Evaluator
                init_args:
                    metrics:
                        type: mmdet.CocoMetric
                        ann_file: data/nuclei/annotations/stage_1_${split}.json
                        metric: bbox
                        format_only: false
        dataset_cfg:
            split_info:
                split_format_to: [ann_file, data_prefix.img]
                split_name_map:
                    val: test
                    test: test
                    predict: test
            train:
                class_path: mmdet.datasets.coco.CocoDataset
                init_args:
                    metainfo:
                        classes: [Nucleus]
                    data_root: data/nuclei
                    ann_file: annotations/stage_1_${split}.json
                    data_prefix:
                        img: stage_1_${split}
                    filter_cfg:
                        filter_empty_gt: True
                        min_size: 32
                    pipeline:
                        - type: mmdet.LoadImageFromFile
                        - type: mmdet.LoadAnnotations
                          with_bbox: true
                        - type: mmdet.Resize
                          scale: !!python/tuple [1333, 800]
                          keep_ratio: true
                        - type: mmdet.RandomFlip
                          prob: 0.5
                        - type: mmdet.PackDetInputs
            val:
                init_args:
                    test_mode: True
                    pipeline:
                        - type: mmdet.LoadImageFromFile
                        - type: mmdet.LoadAnnotations
                          with_bbox: true
                        - type: mmdet.Resize
                          scale: !!python/tuple [1333, 800]
                          keep_ratio: true
                        - type: mmdet.PackDetInputs
                          meta_keys:
                              [
                                  "img_id",
                                  "img_path",
                                  "ori_shape",
                                  "img_shape",
                                  "scale_factor",
                              ]
        dataloader_cfg:
            train:
                batch_size: 2
                num_workers: 16
                persistent_workers: true
                pin_memory: true
                batch_sampler:
                    class_path: datasets.AspectRatioBatchSampler
            predict:
                batch_size: 48

trainer:
    logger:
        init_args:
            tags:
                post_item: nuclei
    callbacks:
        change_item:
            - - 0
              - init_args:
                    monitor: val/coco/bbox_mAP_50
                    filename: "epoch:{epoch}-val_map_50:{val/coco/bbox_mAP_50:.4g}"
                    mode: max
